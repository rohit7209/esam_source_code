/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sam;

import java.util.Properties;

import javax.mail.internet.AddressException;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.mail.Multipart;
import javax.activation.*;
import javax.mail.internet.*;

/**
 *
 * @author Sanatan Home
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        //dfe();
        /*Object[] elements = new Object[] {"Cat", "Dog", "Lion", "Mouse"};
AutoCompleteSupport.install(jComboBox1, GlazedLists.eventListOf(elements));*/
    }

    void dfe(){
        this.getContentPane().removeAll();
        this.repaint();
        
        //find_record panel=new find_record("class1","123");
        //glance panel=new glance();
        //attendance panel=new attendance();
        forwarding panel=new forwarding();
        panel.setBounds(0, 0, 1000, 500);
        panel.setVisible(true);
        this.getContentPane().add(panel);
        this.revalidate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(761, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(122, 122, 122)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //sendMailCC(new String[]{"rohit7209@rediffmail.com","rohit.sybero@rediffmail.com"},"rohit.maiden.sharma@gmail.com",new String[]{"sccd11","dfcd21"},"new subject","C:/Users/Sanatan Home/Documents/classon_February_12_14_51.pdf");
    }//GEN-LAST:event_jButton1ActionPerformed
//C:/Users/Sanatan Home/Documents/classon_February_12_14_51.pdf
    void sendMailCC( String emails[], String from_email, String body, String sub){
                final String username = "rohit.maiden.sharma@gmail.com";
		final String password = "8013403637";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress(from_email));
			message.setSubject(sub);
			for(int i=0;i<emails.length;i++){
                            message.setRecipients(Message.RecipientType.CC,InternetAddress.parse(emails[i]));
                        }
                        MimeBodyPart messageBodyPart1=new MimeBodyPart();
                        messageBodyPart1.setText(body);
                        
                        Multipart multipart = new MimeMultipart();
                        
                        multipart.addBodyPart(messageBodyPart1);     
                        message.setContent(multipart);
                        Transport.send(message);
                        System.out.println("Done");
                        
                } catch (AddressException e) {
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd1:"+e.getMessage());
                } catch (MessagingException e) {
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd2:"+e.getMessage());
                } catch (Exception e){
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd3:"+e.getMessage());
                }
    }
    void sendMail( String to_email, String from_email, String name, String body, String sub, String filename){
                final String username = "rohit.maiden.sharma@gmail.com";
		final String password = "8013403637";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress(from_email));
			message.setSubject(sub);
                        message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(to_email));
                        MimeBodyPart messageBodyPart1=new MimeBodyPart();
                        messageBodyPart1.setText(body);
                        
                        MimeBodyPart messageBodyPart2=new MimeBodyPart();
                        DataSource source = new FileDataSource(filename);    
                        messageBodyPart2.setDataHandler(new DataHandler(source));    
                        messageBodyPart2.setFileName(filename);
                            
                        Multipart multipart = new MimeMultipart();
                        
                        multipart.addBodyPart(messageBodyPart1);     
                        multipart.addBodyPart(messageBodyPart2);     
                        message.setContent(multipart);
                        Transport.send(message);
                        System.out.println("Done");
                        
                } catch (AddressException e) {
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd1:"+e.getMessage());
                } catch (MessagingException e) {
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd2:"+e.getMessage());
                } catch (Exception e){
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd3:"+e.getMessage());
                }
    }
    
    void sendMails( String emails[], String from_email, String body[], String sub){
        
		final String username = "rohit.maiden.sharma@gmail.com";
		final String password = "8013403637";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress(from_email));
			message.setSubject(sub);
                        MimeBodyPart messageBodyPart1=new MimeBodyPart();
                        Multipart multipart = new MimeMultipart();
                        for(int i=0;i<emails.length;i++){
                            message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(emails[i]));
                            multipart.removeBodyPart(messageBodyPart1);
                            messageBodyPart1.setText(body[i]);
                            multipart.addBodyPart(messageBodyPart1);     
                            message.setContent(multipart);
                            Transport.send(message);
                            System.out.println("Done");
                        }

                } catch (AddressException e) {
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd1:"+e.getMessage());
                } catch (MessagingException e) {
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd2:"+e.getMessage());
                } catch (Exception e){
                    // ...
                    e.getStackTrace();
                    System.out.println("abcd3:"+e.getMessage());
                }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    // End of variables declaration//GEN-END:variables
}
